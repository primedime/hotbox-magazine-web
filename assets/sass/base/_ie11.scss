/*--------------------------------------------------------------
# Layout Fixes for ie11
--------------------------------------------------------------*/

@media all and (-ms-high-contrast: none) {
  /*--------------------------------------------------------------
# Flexbox grids. 99% same as css grid
--------------------------------------------------------------*/

  .flex, .flex-grid, .grid {
    display: flex;


    //gutters via margins. the flex-basis makes sure it can be sized right
    & > * {
      flex-grow: 1;
      flex-shrink: 1;
      flex-basis: 0;
      margin-right: var(--gutters);
      margin-left: var(--gutters);
    }

    @for $i from 1 through 12 {
      div & .span-#{$i}, &.span-all-#{$i} > * {
        $width: 100% / (12/$i);
        width: calc(#{$width} - #{$gap});
        flex-grow: 0;
        flex-shrink: 0;
        flex-basis: auto;
      }
    }

  }

  .grid.no-gutters {
    & > * {
      margin: 0;
    }
  }

  //many rows has margin bottom and wraps
  .grid {
    flex-wrap: wrap;

    & > * {
      margin-bottom: $gap;
    }
  }

  //pull out to match containers edge
  .container .flex, .container-fluid .flex,
  .container .flex-grid, .container-fluid .flex-grid,
  .site-content .content-area .container-content .grid, .site-content .content-area .container-content .flex-grid,
  .container .grid, .container-fluid .grid, .container-content .grid {
    margin-left: calc(-1 * var(--gutters));
    margin-right: calc(-1 * var(--gutters));

    &.no-gutters {
      margin-left: 0;
      margin-right: 0;
    }
  }

  div .flex-grid, div .flex, div .grid {

    //large and below size on items
    @media(max-width: $media-large) {
      @for $i from 1 through 12 {
        div & > .large-span-#{$i}, &.large-span-all-#{$i} > * {
          $width: 100% / (12/$i);
          width: calc(#{$width} - #{$gap});
          flex-grow: 0;
          flex-shrink: 0;
          flex-basis: auto;
        }
      }
    }

    //medium and below size on items
    @media(max-width: $media-medium) {
      @for $i from 1 through 12 {
        div & > .medium-span-#{$i}, &.medium-span-all-#{$i} > * {
          $width: 100% / (12/$i);
          width: calc(#{$width} - #{$gap});
          flex-grow: 0;
          flex-shrink: 0;
          flex-basis: auto;
        }
      }
    }

    //small and below size on items
    @media(max-width: $media-small) {

      //no need to add class if set to collapse on small is always true. overrides any spans
      @if ($collapse-on-small == true) {
        flex-wrap: wrap;
        div.site & > * {
          width: calc(100% - #{$gap});
          flex-basis: auto;
        }
      }

      @for $i from 1 through 12 {
        div & > .small-span-#{$i}, &.small-span-all-#{$i} > * {
          $width: 100% / (12/$i);
          width: calc(#{$width} - #{$gap});
          flex-grow: 0;
          flex-shrink: 0;
          flex-basis: auto;
        }
      }
    }

  }

  .layout-center-content > * {
    margin: 0; //ie11 freaks out if the inner div has a margin: auto;
  }
}


/*--------------------------------------------------------------
# Sticky Footer "Fix"
--------------------------------------------------------------*/
//todo why?
@media all and (-ms-high-contrast: none) {
  .site-content {
    min-height: 100vh;
  }
}

/*--------------------------------------------------------------
# Header fix
--------------------------------------------------------------*/

//ie11
@media all and (-ms-high-contrast: none) {
  .entry-header {
    height: 20vw;
  }

  .header-basic {
    height: auto;
  }
}
